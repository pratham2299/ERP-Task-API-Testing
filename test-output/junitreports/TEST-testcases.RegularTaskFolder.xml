<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite hostname="DESKTOP-BG83L86" failures="1" tests="13" name="testcases.RegularTaskFolder" time="4.126" errors="0" timestamp="2023-12-16T10:31:57 IST" skipped="0">
  <testcase classname="testcases.RegularTaskFolder" name="verifyAddRegularTaskWithoutAuthorization" time="0.017"/>
  <testcase classname="testcases.RegularTaskFolder" name="verifyGetAllRegularTaskForEmployeeWithoutAuthorization" time="0.035"/>
  <testcase classname="testcases.RegularTaskFolder" name="verifyUpdateRegularTaskWithoutAuthorization" time="0.026"/>
  <testcase classname="testcases.RegularTaskFolder" name="deleteSingleStatusWithoutAuthorization" time="0.016"/>
  <testcase classname="testcases.RegularTaskFolder" name="verifyAddRegularTaskWithAuthorization" time="0.801"/>
  <testcase classname="testcases.RegularTaskFolder" name="addRegularTaskWithSamePayloadAsPrevious" time="0.397"/>
  <testcase classname="testcases.RegularTaskFolder" name="addRegularTaskWithInvalidPayload" time="0.406"/>
  <testcase classname="testcases.RegularTaskFolder" name="verifyGetAllRegularTaskWithAuthorization" time="0.397"/>
  <testcase classname="testcases.RegularTaskFolder" name="verifyGetAllRegularTaskWithInvalidEmployeeId" time="0.424"/>
  <testcase classname="testcases.RegularTaskFolder" name="verifyUpdateRegularTaskWithAuthorization" time="0.424">
    <failure message="Invalid status code expected [200] but found [500]" type="java.lang.AssertionError">
      <![CDATA[java.lang.AssertionError: Invalid status code expected [200] but found [500]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:1419)
at org.testng.Assert.assertEquals(Assert.java:1383)
at testcases.RegularTaskFolder.verifyUpdateRegularTaskWithAuthorization(RegularTaskFolder.java:350)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- verifyUpdateRegularTaskWithAuthorization -->
  <testcase classname="testcases.RegularTaskFolder" name="updateStatusWithoutGivingRegularTaskId" time="0.385"/>
  <testcase classname="testcases.RegularTaskFolder" name="updateStatusByGivingNonExistingRegularTaskId" time="0.382"/>
  <testcase classname="testcases.RegularTaskFolder" name="deleteSingleRegularTaskWithInvalidRegularTaskId" time="0.416"/>
</testsuite> <!-- testcases.RegularTaskFolder -->
