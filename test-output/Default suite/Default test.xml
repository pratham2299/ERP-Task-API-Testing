<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="15" hostname="DESKTOP-BG83L86" failures="1" tests="1" name="Default test" time="2.834" errors="0" timestamp="2023-12-16T10:33:03 IST">
  <testcase classname="testcases.RoleFolder" name="verifyAddRoleWithAuthorization" time="2.316">
    <failure type="java.lang.AssertionError" message="invalid connection value expected [keep-alive] but found [close]">
      <![CDATA[java.lang.AssertionError: invalid connection value expected [keep-alive] but found [close]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at testcases.RoleFolder.deleteSingleRoleWithAuthorization(RoleFolder.java:426)
at testcases.RoleFolder.verifyAddRoleWithAuthorization(RoleFolder.java:148)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- verifyAddRoleWithAuthorization -->
  <testcase classname="testcases.RoleFolder" name="addRoleWithSamePayloadAsPrevious" time="0.0">
    <ignored/>
  </testcase> <!-- addRoleWithSamePayloadAsPrevious -->
  <testcase classname="testcases.RoleFolder" name="verifyGetAllRoleWithAuthorization" time="0.0">
    <ignored/>
  </testcase> <!-- verifyGetAllRoleWithAuthorization -->
  <testcase classname="testcases.RoleFolder" name="getRoleByLevelWithAuthorization" time="0.0">
    <ignored/>
  </testcase> <!-- getRoleByLevelWithAuthorization -->
  <testcase classname="testcases.RoleFolder" name="getRoleByLevelWithInvalidRoleLevel" time="0.0">
    <ignored/>
  </testcase> <!-- getRoleByLevelWithInvalidRoleLevel -->
  <testcase classname="testcases.RoleFolder" name="getRoleByLevelWithoutAuthorization" time="0.0">
    <ignored/>
  </testcase> <!-- getRoleByLevelWithoutAuthorization -->
  <testcase classname="testcases.RoleFolder" name="addRoleWithSameRoleLevelInPayloadAsPrevious" time="0.0">
    <ignored/>
  </testcase> <!-- addRoleWithSameRoleLevelInPayloadAsPrevious -->
  <testcase classname="testcases.RoleFolder" name="verifyAddRoleWithoutAuthorization" time="0.0">
    <ignored/>
  </testcase> <!-- verifyAddRoleWithoutAuthorization -->
  <testcase classname="testcases.RoleFolder" name="updateRoleWithoutGivingRoleId" time="0.0">
    <ignored/>
  </testcase> <!-- updateRoleWithoutGivingRoleId -->
  <testcase classname="testcases.RoleFolder" name="updateRoleWithoutAuthorization" time="0.0">
    <ignored/>
  </testcase> <!-- updateRoleWithoutAuthorization -->
  <testcase classname="testcases.RoleFolder" name="addRoleWithInvalidPayload" time="0.0">
    <ignored/>
  </testcase> <!-- addRoleWithInvalidPayload -->
  <testcase classname="testcases.RoleFolder" name="verifyGetAllRoleWithoutAuthorization" time="0.0">
    <ignored/>
  </testcase> <!-- verifyGetAllRoleWithoutAuthorization -->
  <testcase classname="testcases.RoleFolder" name="updateRoleByGivingNonExistingRoleId" time="0.0">
    <ignored/>
  </testcase> <!-- updateRoleByGivingNonExistingRoleId -->
  <testcase classname="testcases.RoleFolder" name="deleteSingleRoleWithoutAuthorization" time="0.0">
    <ignored/>
  </testcase> <!-- deleteSingleRoleWithoutAuthorization -->
  <testcase classname="testcases.RoleFolder" name="deleteSingleRoleWithInvalidRoleId" time="0.0">
    <ignored/>
  </testcase> <!-- deleteSingleRoleWithInvalidRoleId -->
  <testcase classname="testcases.RoleFolder" name="updateRoleWithAuthorization" time="0.0">
    <ignored/>
  </testcase> <!-- updateRoleWithAuthorization -->
</testsuite> <!-- Default test -->
