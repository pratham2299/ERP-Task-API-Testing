<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="DESKTOP-BG83L86" failures="3" tests="85" name="Test" time="30.568" errors="0" timestamp="2023-12-16T10:31:57 IST">
  <testcase classname="testcases.ProjectFolder" name="verifyAddProjectWithoutAuthorization" time="0.792"/>
  <testcase classname="testcases.ProjectFolder" name="verifyGetAllProjectWithoutAuthorization" time="0.035"/>
  <testcase classname="testcases.ProjectFolder" name="verifyAddProjectWithAuthorization" time="0.493"/>
  <testcase classname="testcases.ProjectFolder" name="addProjectWithSamePayloadAsPrevious" time="0.402"/>
  <testcase classname="testcases.ProjectFolder" name="addProjectWithInvalidPayload" time="0.897"/>
  <testcase classname="testcases.ProjectFolder" name="addProjectWithoutGivingProjectStartDateInPayload" time="0.421"/>
  <testcase classname="testcases.ProjectFolder" name="verifyGetAllProjectWithAuthorization" time="0.377"/>
  <testcase classname="testcases.StatusFolder" name="verifyAddStatusWithoutAuthorization" time="0.021"/>
  <testcase classname="testcases.StatusFolder" name="verifyGetAllStatusWithoutAuthorization" time="0.019"/>
  <testcase classname="testcases.StatusFolder" name="verifyUpdateStatusWithoutAuthorization" time="0.018"/>
  <testcase classname="testcases.StatusFolder" name="deleteSingleStatusWithoutAuthorization" time="0.028"/>
  <testcase classname="testcases.StatusFolder" name="verifyAddStatusWithAuthorization" time="0.847"/>
  <testcase classname="testcases.StatusFolder" name="addStatusWithSamePayloadAsPrevious" time="0.394"/>
  <testcase classname="testcases.StatusFolder" name="addStatusWithInvalidPayload" time="0.394"/>
  <testcase classname="testcases.StatusFolder" name="addStatusWithSameStatusLevelInPayloadAsPrevious" time="0.402"/>
  <testcase classname="testcases.StatusFolder" name="verifyGetAllStatusWithAuthorization" time="0.367"/>
  <testcase classname="testcases.StatusFolder" name="updateStatusWithAuthorization" time="0.367"/>
  <testcase classname="testcases.StatusFolder" name="updateStatusWithoutGivingStatusId" time="0.411"/>
  <testcase classname="testcases.StatusFolder" name="updateStatusByGivingNonExistingStatusId" time="0.389"/>
  <testcase classname="testcases.StatusFolder" name="deleteSingleStatusWithInvalidStatusName" time="0.374"/>
  <testcase classname="testcases.DesignationFolder" name="verifyAddDesignationWithoutAuthorization" time="0.017"/>
  <testcase classname="testcases.DesignationFolder" name="verifyGetAllDesignationWithoutAuthorization" time="0.017"/>
  <testcase classname="testcases.DesignationFolder" name="updateDesignationWithoutAuthorization" time="0.051"/>
  <testcase classname="testcases.DesignationFolder" name="deleteSingleDesignationWithoutAuthorization" time="0.022"/>
  <testcase classname="testcases.DesignationFolder" name="verifyAddDesignationWithAuthorization" time="0.771"/>
  <testcase classname="testcases.DesignationFolder" name="addDesignationWithInvalidPayload" time="0.382"/>
  <testcase classname="testcases.DesignationFolder" name="addDesignationWithSamePayloadAsPrevious" time="0.398"/>
  <testcase classname="testcases.DesignationFolder" name="verifyGetAllDesignationWithAuthorization" time="0.392"/>
  <testcase classname="testcases.DesignationFolder" name="updateDesignationWithAuthorization" time="0.383"/>
  <testcase classname="testcases.DesignationFolder" name="updateDesignationWithoutGivingDesignationId" time="0.399"/>
  <testcase classname="testcases.DesignationFolder" name="updateDesignationByGivingNonExistingDesignationId" time="0.385"/>
  <testcase classname="testcases.DesignationFolder" name="deleteSingleDesignationWithInvalidDesignationName" time="0.418"/>
  <testcase classname="testcases.RegularTaskFolder" name="verifyAddRegularTaskWithoutAuthorization" time="0.017"/>
  <testcase classname="testcases.RegularTaskFolder" name="verifyGetAllRegularTaskForEmployeeWithoutAuthorization" time="0.035"/>
  <testcase classname="testcases.RegularTaskFolder" name="verifyUpdateRegularTaskWithoutAuthorization" time="0.026"/>
  <testcase classname="testcases.RegularTaskFolder" name="deleteSingleStatusWithoutAuthorization" time="0.016"/>
  <testcase classname="testcases.RegularTaskFolder" name="verifyAddRegularTaskWithAuthorization" time="0.801"/>
  <testcase classname="testcases.RegularTaskFolder" name="addRegularTaskWithSamePayloadAsPrevious" time="0.397"/>
  <testcase classname="testcases.RegularTaskFolder" name="addRegularTaskWithInvalidPayload" time="0.406"/>
  <testcase classname="testcases.RegularTaskFolder" name="verifyGetAllRegularTaskWithAuthorization" time="0.397"/>
  <testcase classname="testcases.RegularTaskFolder" name="verifyGetAllRegularTaskWithInvalidEmployeeId" time="0.424"/>
  <testcase classname="testcases.RegularTaskFolder" name="verifyUpdateRegularTaskWithAuthorization" time="0.424">
    <failure type="java.lang.AssertionError" message="Invalid status code expected [200] but found [500]">
      <![CDATA[java.lang.AssertionError: Invalid status code expected [200] but found [500]
at testcases.RegularTaskFolder.verifyUpdateRegularTaskWithAuthorization(RegularTaskFolder.java:350)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 33 stack frames]]>
    </failure>
  </testcase> <!-- verifyUpdateRegularTaskWithAuthorization -->
  <testcase classname="testcases.RegularTaskFolder" name="updateStatusWithoutGivingRegularTaskId" time="0.385"/>
  <testcase classname="testcases.RegularTaskFolder" name="updateStatusByGivingNonExistingRegularTaskId" time="0.382"/>
  <testcase classname="testcases.RegularTaskFolder" name="deleteSingleRegularTaskWithInvalidRegularTaskId" time="0.416"/>
  <testcase classname="testcases.RoleFolder" name="verifyAddRoleWithoutAuthorization" time="0.016"/>
  <testcase classname="testcases.RoleFolder" name="verifyGetAllRoleWithoutAuthorization" time="0.015"/>
  <testcase classname="testcases.RoleFolder" name="updateRoleWithoutAuthorization" time="0.014"/>
  <testcase classname="testcases.RoleFolder" name="deleteSingleRoleWithoutAuthorization" time="0.016"/>
  <testcase classname="testcases.RoleFolder" name="getRoleByLevelWithoutAuthorization" time="0.014"/>
  <testcase classname="testcases.RoleFolder" name="verifyAddRoleWithAuthorization" time="0.832">
    <failure type="java.lang.AssertionError" message="invalid connection value expected [keep-alive] but found [close]">
      <![CDATA[java.lang.AssertionError: invalid connection value expected [keep-alive] but found [close]
at testcases.RoleFolder.deleteSingleRoleWithAuthorization(RoleFolder.java:426)
at testcases.RoleFolder.verifyAddRoleWithAuthorization(RoleFolder.java:148)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 32 stack frames]]>
    </failure>
  </testcase> <!-- verifyAddRoleWithAuthorization -->
  <testcase classname="testcases.RoleFolder" name="addRoleWithSamePayloadAsPrevious" time="0.413"/>
  <testcase classname="testcases.RoleFolder" name="addRoleWithInvalidPayload" time="0.404"/>
  <testcase classname="testcases.RoleFolder" name="addRoleWithSameRoleLevelInPayloadAsPrevious" time="0.535"/>
  <testcase classname="testcases.RoleFolder" name="verifyGetAllRoleWithAuthorization" time="0.51"/>
  <testcase classname="testcases.RoleFolder" name="updateRoleWithAuthorization" time="0.506"/>
  <testcase classname="testcases.RoleFolder" name="updateRoleWithoutGivingRoleId" time="0.562"/>
  <testcase classname="testcases.RoleFolder" name="updateRoleByGivingNonExistingRoleId" time="0.536"/>
  <testcase classname="testcases.RoleFolder" name="deleteSingleRoleWithInvalidRoleId" time="0.599"/>
  <testcase classname="testcases.RoleFolder" name="getRoleByLevelWithAuthorization" time="0.437"/>
  <testcase classname="testcases.RoleFolder" name="getRoleByLevelWithInvalidRoleLevel" time="0.457"/>
  <testcase classname="testcases.TagFolder" name="verifyAddTagWithoutAuthorization" time="0.017"/>
  <testcase classname="testcases.TagFolder" name="verifyGetAllTagWithoutAuthorization" time="0.017"/>
  <testcase classname="testcases.TagFolder" name="updateTagWithoutAuthorization" time="0.055"/>
  <testcase classname="testcases.TagFolder" name="deleteSingleTagWithoutAuthorization" time="0.025"/>
  <testcase classname="testcases.TagFolder" name="verifyAddTagWithAuthorization" time="0.92"/>
  <testcase classname="testcases.TagFolder" name="addTagWithSamePayloadAsPrevious" time="0.497"/>
  <testcase classname="testcases.TagFolder" name="addTagWithInvalidPayload" time="0.427"/>
  <testcase classname="testcases.TagFolder" name="verifyGetAllTagWithAuthorization" time="0.397"/>
  <testcase classname="testcases.TagFolder" name="updateTagWithAuthorization" time="0.439"/>
  <testcase classname="testcases.TagFolder" name="updateTagWithoutGivingTagId" time="0.447"/>
  <testcase classname="testcases.TagFolder" name="updateTagByGivingNonExistingTagId" time="0.515"/>
  <testcase classname="testcases.TagFolder" name="deleteSingleTagWithInvalidTagName" time="0.505"/>
  <testcase classname="testcases.PriorityFolder" name="verifyAddPriorityWithoutAuthorization" time="0.016"/>
  <testcase classname="testcases.PriorityFolder" name="verifyGetAllPriorityWithoutAuthorization" time="0.021"/>
  <testcase classname="testcases.PriorityFolder" name="updatePriorityWithoutAuthorization" time="0.016"/>
  <testcase classname="testcases.PriorityFolder" name="verifyAddPriorityWithAuthorization" time="1.113"/>
  <testcase classname="testcases.PriorityFolder" name="addPriorityWithSamePayloadAsPrevious" time="0.475"/>
  <testcase classname="testcases.PriorityFolder" name="addPriorityWithInvalidPayload" time="0.421"/>
  <testcase classname="testcases.PriorityFolder" name="addStatusWithSamePriorityLevelInPayloadAsPrevious" time="0.404"/>
  <testcase classname="testcases.PriorityFolder" name="verifyGetAllPriorityWithAuthorization" time="0.405"/>
  <testcase classname="testcases.PriorityFolder" name="updatePriorityWithAuthorization" time="0.409"/>
  <testcase classname="testcases.PriorityFolder" name="updatePriorityWithoutGivingPriorityId" time="0.383"/>
  <testcase classname="testcases.PriorityFolder" name="updatePriorityByGivingNonExistingPriorityId" time="0.417"/>
  <testcase classname="testcases.PriorityFolder" name="deleteSinglePriorityWithInvalidPriorityName" time="0.376">
    <failure type="java.lang.AssertionError" message="expected [No priority to delete with Master2.] but found [No priority to delete with Low,Master2.]">
      <![CDATA[java.lang.AssertionError: expected [No priority to delete with Master2.] but found [No priority to delete with Low,Master2.]
at testcases.PriorityFolder.deleteSinglePriorityWithInvalidPriorityName(PriorityFolder.java:429)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 33 stack frames]]>
    </failure>
  </testcase> <!-- deleteSinglePriorityWithInvalidPriorityName -->
</testsuite> <!-- Test -->
