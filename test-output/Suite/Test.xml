<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="DESKTOP-BG83L86" failures="3" tests="69" name="Test" time="25.544" errors="0" timestamp="2023-12-15T10:54:08 IST">
  <testcase classname="testcases.ProjectFolder" name="verifyAddProjectWithoutAuthorization" time="1.258"/>
  <testcase classname="testcases.ProjectFolder" name="verifyGetAllProjectWithoutAuthorization" time="0.043"/>
  <testcase classname="testcases.ProjectFolder" name="verifyAddProjectWithAuthorization" time="0.766"/>
  <testcase classname="testcases.ProjectFolder" name="addProjectWithSamePayloadAsPrevious" time="0.404"/>
  <testcase classname="testcases.ProjectFolder" name="addProjectWithInvalidPayload" time="0.916"/>
  <testcase classname="testcases.ProjectFolder" name="addProjectWithoutGivingProjectStartDateInPayload" time="0.413"/>
  <testcase classname="testcases.ProjectFolder" name="verifyGetAllProjectWithAuthorization" time="0.398"/>
  <testcase classname="testcases.StatusFolder" name="verifyAddStatusWithoutAuthorization" time="0.035"/>
  <testcase classname="testcases.StatusFolder" name="verifyGetAllStatusWithoutAuthorization" time="0.027"/>
  <testcase classname="testcases.StatusFolder" name="verifyUpdateStatusWithoutAuthorization" time="0.035"/>
  <testcase classname="testcases.StatusFolder" name="deleteSingleStatusWithoutAuthorization" time="0.055"/>
  <testcase classname="testcases.StatusFolder" name="verifyAddStatusWithAuthorization" time="0.979">
    <failure type="java.lang.AssertionError" message="Invalid status code expected [200] but found [404]">
      <![CDATA[java.lang.AssertionError: Invalid status code expected [200] but found [404]
at testcases.StatusFolder.deleteSingleStatusWithAuthorization(StatusFolder.java:328)
at testcases.StatusFolder.verifyAddStatusWithAuthorization(StatusFolder.java:149)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 33 stack frames]]>
    </failure>
  </testcase> <!-- verifyAddStatusWithAuthorization -->
  <testcase classname="testcases.StatusFolder" name="addStatusWithSamePayloadAsPrevious" time="0.432"/>
  <testcase classname="testcases.StatusFolder" name="addStatusWithInvalidPayload" time="0.396"/>
  <testcase classname="testcases.StatusFolder" name="verifyGetAllStatusWithAuthorization" time="0.436"/>
  <testcase classname="testcases.StatusFolder" name="updateStatusWithAuthorization" time="0.451"/>
  <testcase classname="testcases.StatusFolder" name="updateStatusWithoutGivingStatusId" time="0.382"/>
  <testcase classname="testcases.StatusFolder" name="updateStatusByGivingNonExistingStatusId" time="0.41"/>
  <testcase classname="testcases.StatusFolder" name="deleteSingleStatusWithInvalidStatusName" time="0.422"/>
  <testcase classname="testcases.DesignationFolder" name="verifyAddDesignationWithoutAuthorization" time="0.039"/>
  <testcase classname="testcases.DesignationFolder" name="verifyGetAllDesignationWithoutAuthorization" time="0.026"/>
  <testcase classname="testcases.DesignationFolder" name="updateDesignationWithoutAuthorization" time="0.056"/>
  <testcase classname="testcases.DesignationFolder" name="deleteSingleDesignationWithoutAuthorization" time="0.032"/>
  <testcase classname="testcases.DesignationFolder" name="verifyAddDesignationWithAuthorization" time="0.806">
    <failure type="java.lang.AssertionError" message="Invalid status code expected [200] but found [404]">
      <![CDATA[java.lang.AssertionError: Invalid status code expected [200] but found [404]
at testcases.DesignationFolder.deleteSingleDesignationWithAuthorization(DesignationFolder.java:320)
at testcases.DesignationFolder.verifyAddDesignationWithAuthorization(DesignationFolder.java:147)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 33 stack frames]]>
    </failure>
  </testcase> <!-- verifyAddDesignationWithAuthorization -->
  <testcase classname="testcases.DesignationFolder" name="addDesignationWithInvalidPayload" time="0.4"/>
  <testcase classname="testcases.DesignationFolder" name="addDesignationWithSamePayloadAsPrevious" time="0.441"/>
  <testcase classname="testcases.DesignationFolder" name="verifyGetAllDesignationWithAuthorization" time="0.436"/>
  <testcase classname="testcases.DesignationFolder" name="updateDesignationWithAuthorization" time="0.424"/>
  <testcase classname="testcases.DesignationFolder" name="updateDesignationWithoutGivingDesignationId" time="0.456"/>
  <testcase classname="testcases.DesignationFolder" name="updateDesignationByGivingNonExistingDesignationId" time="0.411"/>
  <testcase classname="testcases.DesignationFolder" name="deleteSingleDesignationWithInvalidDesignationName" time="0.439"/>
  <testcase classname="testcases.RoleFolder" name="verifyAddRoleWithoutAuthorization" time="0.022"/>
  <testcase classname="testcases.RoleFolder" name="verifyGetAllRoleWithoutAuthorization" time="0.021"/>
  <testcase classname="testcases.RoleFolder" name="updateRoleWithoutAuthorization" time="0.022"/>
  <testcase classname="testcases.RoleFolder" name="deleteSingleRoleWithoutAuthorization" time="0.019"/>
  <testcase classname="testcases.RoleFolder" name="getRoleByLevelWithoutAuthorization" time="0.017"/>
  <testcase classname="testcases.RoleFolder" name="verifyAddRoleWithAuthorization" time="0.45"/>
  <testcase classname="testcases.RoleFolder" name="addRoleWithSamePayloadAsPrevious" time="0.392"/>
  <testcase classname="testcases.RoleFolder" name="addRoleWithInvalidPayload" time="0.448"/>
  <testcase classname="testcases.RoleFolder" name="verifyGetAllRoleWithAuthorization" time="0.864"/>
  <testcase classname="testcases.RoleFolder" name="updateRoleWithAuthorization" time="0.425"/>
  <testcase classname="testcases.RoleFolder" name="updateRoleWithoutGivingRoleId" time="0.442"/>
  <testcase classname="testcases.RoleFolder" name="updateRoleByGivingNonExistingRoleId" time="0.413"/>
  <testcase classname="testcases.RoleFolder" name="deleteSingleRoleWithInvalidRoleId" time="0.463"/>
  <testcase classname="testcases.RoleFolder" name="getRoleByLevelWithAuthorization" time="0.429"/>
  <testcase classname="testcases.RoleFolder" name="getRoleByLevelWithInvalidRoleLevel" time="0.405"/>
  <testcase classname="testcases.TagFolder" name="verifyAddTagWithoutAuthorization" time="0.019"/>
  <testcase classname="testcases.TagFolder" name="verifyGetAllTagWithoutAuthorization" time="0.02"/>
  <testcase classname="testcases.TagFolder" name="updateTagWithoutAuthorization" time="0.063"/>
  <testcase classname="testcases.TagFolder" name="deleteSingleTagWithoutAuthorization" time="0.022"/>
  <testcase classname="testcases.TagFolder" name="verifyAddTagWithAuthorization" time="0.784">
    <failure type="java.lang.AssertionError" message="Invalid status code expected [200] but found [404]">
      <![CDATA[java.lang.AssertionError: Invalid status code expected [200] but found [404]
at testcases.TagFolder.deleteSingleTagWithAuthorization(TagFolder.java:320)
at testcases.TagFolder.verifyAddTagWithAuthorization(TagFolder.java:147)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 33 stack frames]]>
    </failure>
  </testcase> <!-- verifyAddTagWithAuthorization -->
  <testcase classname="testcases.TagFolder" name="addTagWithSamePayloadAsPrevious" time="0.433"/>
  <testcase classname="testcases.TagFolder" name="addTagWithInvalidPayload" time="0.389"/>
  <testcase classname="testcases.TagFolder" name="verifyGetAllTagWithAuthorization" time="0.394"/>
  <testcase classname="testcases.TagFolder" name="updateTagWithAuthorization" time="0.444"/>
  <testcase classname="testcases.TagFolder" name="updateTagWithoutGivingTagId" time="0.379"/>
  <testcase classname="testcases.TagFolder" name="updateTagByGivingNonExistingTagId" time="0.398"/>
  <testcase classname="testcases.TagFolder" name="deleteSingleTagWithInvalidTagName" time="0.402"/>
  <testcase classname="testcases.PriorityFolder" name="verifyAddPriorityWithoutAuthorization" time="0.02"/>
  <testcase classname="testcases.PriorityFolder" name="verifyGetAllPriorityWithoutAuthorization" time="0.02"/>
  <testcase classname="testcases.PriorityFolder" name="updatePriorityWithoutAuthorization" time="0.024"/>
  <testcase classname="testcases.PriorityFolder" name="verifyAddPriorityWithAuthorization" time="0.852"/>
  <testcase classname="testcases.PriorityFolder" name="addPriorityWithSamePayloadAsPrevious" time="0.382"/>
  <testcase classname="testcases.PriorityFolder" name="addPriorityWithInvalidPayload" time="0.44"/>
  <testcase classname="testcases.PriorityFolder" name="verifyGetAllPriorityWithAuthorization" time="0.392"/>
  <testcase classname="testcases.PriorityFolder" name="updatePriorityWithAuthorization" time="0.44"/>
  <testcase classname="testcases.PriorityFolder" name="updatePriorityWithoutGivingPriorityId" time="0.427"/>
  <testcase classname="testcases.PriorityFolder" name="updatePriorityByGivingNonExistingPriorityId" time="0.47"/>
  <testcase classname="testcases.PriorityFolder" name="deleteSinglePriorityWithInvalidPriorityName" time="0.415"/>
</testsuite> <!-- Test -->
