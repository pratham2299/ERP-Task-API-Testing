<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite hostname="DESKTOP-BG83L86" failures="1" tests="11" name="testcases.TagFolder" time="4.070" errors="0" timestamp="2023-12-16T12:07:23 IST" skipped="0">
  <testcase classname="testcases.TagFolder" name="verifyAddTagWithoutAuthorization" time="0.015"/>
  <testcase classname="testcases.TagFolder" name="verifyGetAllTagWithoutAuthorization" time="0.017"/>
  <testcase classname="testcases.TagFolder" name="updateTagWithoutAuthorization" time="0.022"/>
  <testcase classname="testcases.TagFolder" name="deleteSingleTagWithoutAuthorization" time="0.023"/>
  <testcase classname="testcases.TagFolder" name="verifyAddTagWithAuthorization" time="0.847"/>
  <testcase classname="testcases.TagFolder" name="addTagWithSamePayloadAsPrevious" time="0.505">
    <failure message="expected [Tag Already Exists] but found [null]" type="java.lang.AssertionError">
      <![CDATA[java.lang.AssertionError: expected [Tag Already Exists] but found [null]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at testcases.TagFolder.addTagWithSamePayloadAsPrevious(TagFolder.java:186)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:308)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:71)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:113)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
    </failure>
  </testcase> <!-- addTagWithSamePayloadAsPrevious -->
  <testcase classname="testcases.TagFolder" name="addTagWithInvalidPayload" time="0.414"/>
  <testcase classname="testcases.TagFolder" name="verifyGetAllTagWithAuthorization" time="0.913"/>
  <testcase classname="testcases.TagFolder" name="updateTagWithoutGivingTagId" time="0.466"/>
  <testcase classname="testcases.TagFolder" name="updateTagByGivingNonExistingTagId" time="0.420"/>
  <testcase classname="testcases.TagFolder" name="deleteSingleTagWithInvalidTagName" time="0.428"/>
</testsuite> <!-- testcases.TagFolder -->
